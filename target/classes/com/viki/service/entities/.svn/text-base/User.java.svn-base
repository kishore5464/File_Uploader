package com.fbt.talentex.jobseeker.dao.entities;

// Generated May 4, 2015 5:50:04 PM by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user")
public class User implements Serializable {

	private Integer id;
	private Profile profile;
	private String firstName;
	private String lastName;
	private String username;
	private String password;
	private Date createdDate;
	private int status;
	private String userImage;
	private Set<AccessCode> accessCodes = new HashSet<AccessCode>();
	private Set<TestimonialsMaster> testimonialsMasters = new HashSet<TestimonialsMaster>();

	public User() {
	}

	public User(Profile profile, String firstName, String lastName,
			String username, String password, Date createdDate, int status) {
		this.profile = profile;
		this.firstName = firstName;
		this.lastName = lastName;
		this.username = username;
		this.password = password;
		this.createdDate = createdDate;
		this.status = status;
	}

	public User(Profile profile, String firstName, String lastName,
			String username, String password, Date createdDate, int status,
			String userImage, Set<AccessCode> accessCodes, Set<TestimonialsMaster> testimonialsMasters) {
		this.profile = profile;
		this.firstName = firstName;
		this.lastName = lastName;
		this.username = username;
		this.password = password;
		this.createdDate = createdDate;
		this.status = status;
		this.userImage = userImage;
		this.accessCodes = accessCodes;
		this.testimonialsMasters = testimonialsMasters;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "profile_id", nullable = false)
	public Profile getProfile() {
		return this.profile;
	}

	public void setProfile(Profile profile) {
		this.profile = profile;
	}

	@Column(name = "first_name", nullable = false, length = 50)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", nullable = false, length = 50)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "username", nullable = false, length = 50)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 50)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "status", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Column(name = "user_image")
	public String getUserImage() {
		return this.userImage;
	}

	public void setUserImage(String userImage) {
		this.userImage = userImage;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<AccessCode> getAccessCodes() {
		return this.accessCodes;
	}

	public void setAccessCodes(Set<AccessCode> accessCodes) {
		this.accessCodes = accessCodes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<TestimonialsMaster> getTestimonialsMasters() {
		return this.testimonialsMasters;
	}

	public void setTestimonialsMasters(Set<TestimonialsMaster> testimonialsMasters) {
		this.testimonialsMasters = testimonialsMasters;
	}

}
