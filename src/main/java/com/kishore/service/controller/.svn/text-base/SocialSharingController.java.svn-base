package com.fbt.talentex.jobseeker.service.controller;

import java.io.IOException;
import java.net.URL;
import java.util.Arrays;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.fbt.talentex.jobseeker.util.MailSenderService;

import facebook4j.Facebook;
import facebook4j.FacebookFactory;
import facebook4j.PostUpdate;

@Controller
public class SocialSharingController {
	
	@Autowired
	MailSenderService mailSenderService;

	@RequestMapping(value = "/getsocial" ,method=RequestMethod.GET)
	public ModelAndView linkShare(HttpSession session, ModelAndView model,@RequestParam("refid") String jobseekerID){
		session.setAttribute("refJobseeekerId",jobseekerID);
		model=new ModelAndView("redirect:/jobseeker");
		return model;
	}

	@RequestMapping(value = "/reflinkmail")
	public ModelAndView refLinkCall(ModelAndView model,HttpSession session,HttpServletRequest request){

		String str = request.getParameter("emailid");
		String message=request.getParameter("message");
		String jobseekerid=""+session.getAttribute("jobseekerid");

		String link="http://talentex.in/getsocial?refid="+jobseekerid+"";

		String name=""+session.getAttribute("nickname");
		
		List<String> strlist = Arrays.asList(str.split(","));
		for(String maillis:strlist){
			mailSenderService.socailLink(maillis, link,name,message);
		}
		model=new ModelAndView();
		return model;
	}

	@RequestMapping(value="/contactform",method=RequestMethod.POST)
	public ModelAndView contactForm(ModelAndView model,HttpServletRequest request,HttpSession session){
		mailSenderService.feedbackMail(request.getParameter("name"), request.getParameter("organization"), request.getParameter("email"), request.getParameter("phone"), request.getParameter("Comments"));
		model=new ModelAndView("about");
		model.addObject("thanks","Thanks for your email.");
		return model;
	}

	@RequestMapping(value = "/share")
	protected void doGet(ModelAndView model,HttpServletRequest request, HttpServletResponse response) throws Exception{
		try{
			Facebook facebook = new FacebookFactory().getInstance();
			facebook.setOAuthAppId("897442236983382", "d0ad074a914c2cdb15978e5ba9b68203");
//			AccessToken acessToken=new AccessToken("CAAUI6XXk0JUBAO1O1LWzcmxfRYZCDTeytc91LZA9qKfCaW0j0BMep3rjUZAdebqGwCtYkhDHhVroBZCKN1DrqhXXuiH96L9C1QZC7xoxyup4DettolTJkrkgSA5MVrc3ydZBKk6r6DmDFMBQFAWsynNZB7fRfQ9rTdQLu4IuNMYYEdzDAEb5XyRUZCmYDvR9ZCpb8DCHnjCpbfVK1Pp6e6Tx2");
//			facebook.setOAuthAccessToken(acessToken);
			facebook.setOAuthPermissions("publish_actions");
			request.getSession().setAttribute("facebook", facebook);
			String oauthCode = request.getParameter("code");
			StringBuffer callbackURL = request.getRequestURL();
			int index = callbackURL.lastIndexOf("/");
			callbackURL.replace(index, callbackURL.length(), "").append("/callback");
			response.sendRedirect(facebook.getOAuthAuthorizationURL(callbackURL.toString()));
		}
		catch(Exception e){
			response.sendRedirect("/");
		}
	}
	
	@RequestMapping(value = "/callback")
	protected ModelAndView callBack(ModelAndView model,HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Facebook facebook = (Facebook) request.getSession().getAttribute("facebook");
		String oauthCode = request.getParameter("code");
		try {
			facebook.getOAuthAccessToken(oauthCode);
		} catch (Exception e) {
			
			response.sendRedirect("/");
			
		}
//		response.sendRedirect(request.getContextPath() + "/referfriends");
		model=new ModelAndView("redirect:/postCall");
		
		return model;
	}

	@RequestMapping(value="/postCall")
	public ModelAndView postCall(HttpSession session,ModelAndView model,HttpServletRequest request){
		try{
			String jobseekerid=""+session.getAttribute("jobseekerid");
			Facebook facebook = (Facebook) request.getSession().getAttribute("facebook");
			PostUpdate post = new PostUpdate(new URL("http://talentex.in/getsocial?refid="+jobseekerid+""))
			.picture(new URL("http://fbtech.in/images/fb_share.jpg"))
			.name("Talentex - Gateway to your future.")
			.caption("Click to enroll!!")
			.description("Talentex having more than 5 years of "
					+ "expertize in helping students to identify their dream job. We at"
					+ " Talentex help you too enroll enlighten and evaluate your professional"
					+ " capabilities and fine tune you to get your dream job.");
			facebook.postFeed(post);
			}catch(Exception e){
			}
			session.setAttribute("fbstatus", "1");
			model = new ModelAndView("redirect:/referfriends");
			
			return model;
	}

}
