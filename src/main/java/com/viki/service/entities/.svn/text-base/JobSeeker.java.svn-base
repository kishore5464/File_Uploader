package com.fbt.talentex.jobseeker.dao.entities;

// Generated May 4, 2015 4:56:50 PM by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * JobSeeker generated by hbm2java
 */
@Entity
@Table(name = "job_seeker")
public class JobSeeker implements Serializable {

	private Integer id;
	private JobSeekerReferenceMaster jobSeekerReferenceMaster;
	private Integer userId;
	private Date dateOfBirth;
	private Integer dobVerify;
	private String gender;
	private Integer nameVerify;
	private String parentName;
	private String pan;
	private Integer panVerify;
	private String passport;
	private Integer passportVerify;
	private Date createdDate;
	private Date modifiedDate;
	private String jobSeekerNickName;
	private Set<JobSeekerSchool> jobSeekerSchools = new HashSet<JobSeekerSchool>();
	private Set<PointsRedeemHistory> pointsRedeemHistories = new HashSet<PointsRedeemHistory>();
	private Set<JobSeekerWorkpreference> jobSeekerWorkpreferences = new HashSet<JobSeekerWorkpreference>();
	private Set<JobSeekerContact> jobSeekerContacts = new HashSet<JobSeekerContact>();
	private Set<JobSeekerExamScore> jobSeekerExamScores = new HashSet<JobSeekerExamScore>();
	private Set<JobSeekerAnnouncement> jobSeekerAnnouncements = new HashSet<JobSeekerAnnouncement>();
	private Set<JobSeekerExperience> jobSeekerExperiences = new HashSet<JobSeekerExperience>();
	private Set<QpStatusJobSeekerMapping> qpStatusJobSeekerMappings = new HashSet<QpStatusJobSeekerMapping>();
	private Set<JobSeekerSkillset> jobSeekerSkillsets = new HashSet<JobSeekerSkillset>();
	private Set<JobSeekerPointsHistory> jobSeekerPointsHistories = new HashSet<JobSeekerPointsHistory>();
	private Set<JobSeekerCourse> jobSeekerCourses = new HashSet<JobSeekerCourse>();
	private Set<JobSeekerPoints> jobSeekerPointses = new HashSet<JobSeekerPoints>();
	private Set<JobSeekerStatus> jobSeekerStatuses = new HashSet<JobSeekerStatus>();
	private Set<JobSeekerReferralDetails> jobSeekerReferralDetailses = new HashSet<JobSeekerReferralDetails>();
	private Set<JobSeekerSkillProject> jobSeekerSkillProjects = new HashSet<JobSeekerSkillProject>();
	private Set<JobSeekerLanguage> jobSeekerLanguages = new HashSet<JobSeekerLanguage>();
	private Set<JobseekerInterview> jobseekerInterviews = new HashSet<JobseekerInterview>();
	private Set<JobSeekerDegree> jobSeekerDegrees = new HashSet<JobSeekerDegree>();
	private Set<JobSeekerBasicQp> jobSeekerBasicQps = new HashSet<JobSeekerBasicQp>();
	private Set<JobSeekerPreferedJobrole> jobSeekerPreferedJobroles = new HashSet<JobSeekerPreferedJobrole>();
	private Set<JobSeekerExamSchedule> jobSeekerExamSchedules = new HashSet<JobSeekerExamSchedule>();

	public JobSeeker() {
	}

	public JobSeeker(JobSeekerReferenceMaster jobSeekerReferenceMaster) {
		this.jobSeekerReferenceMaster = jobSeekerReferenceMaster;
	}

	public JobSeeker(JobSeekerReferenceMaster jobSeekerReferenceMaster,
			Integer userId, Date dateOfBirth, Integer dobVerify, String gender,
			Integer nameVerify, String parentName, String pan,
			Integer panVerify, String passport, Integer passportVerify,
			Date createdDate, Date modifiedDate, String jobSeekerNickName,
			Set<JobSeekerSchool> jobSeekerSchools, Set<PointsRedeemHistory> pointsRedeemHistories,
			Set<JobSeekerWorkpreference> jobSeekerWorkpreferences, Set<JobSeekerContact> jobSeekerContacts,
			Set<JobSeekerExamScore> jobSeekerExamScores, Set<JobSeekerAnnouncement> jobSeekerAnnouncements,
			Set<JobSeekerExperience> jobSeekerExperiences, Set<QpStatusJobSeekerMapping> qpStatusJobSeekerMappings,
			Set<JobSeekerSkillset> jobSeekerSkillsets, Set<JobSeekerPointsHistory> jobSeekerPointsHistories,
			Set<JobSeekerCourse> jobSeekerCourses, Set<JobSeekerPoints> jobSeekerPointses, Set<JobSeekerStatus> jobSeekerStatuses,
			Set<JobSeekerReferralDetails> jobSeekerReferralDetailses, Set<JobSeekerSkillProject> jobSeekerSkillProjects,
			Set<JobSeekerLanguage> jobSeekerLanguages, Set<JobseekerInterview> jobseekerInterviews,
			Set<JobSeekerDegree> jobSeekerDegrees, Set<JobSeekerBasicQp> jobSeekerBasicQps,
			Set<JobSeekerPreferedJobrole> jobSeekerPreferedJobroles, Set<JobSeekerExamSchedule> jobSeekerExamSchedules) {
		this.jobSeekerReferenceMaster = jobSeekerReferenceMaster;
		this.userId = userId;
		this.dateOfBirth = dateOfBirth;
		this.dobVerify = dobVerify;
		this.gender = gender;
		this.nameVerify = nameVerify;
		this.parentName = parentName;
		this.pan = pan;
		this.panVerify = panVerify;
		this.passport = passport;
		this.passportVerify = passportVerify;
		this.createdDate = createdDate;
		this.modifiedDate = modifiedDate;
		this.jobSeekerNickName = jobSeekerNickName;
		this.jobSeekerSchools = jobSeekerSchools;
		this.pointsRedeemHistories = pointsRedeemHistories;
		this.jobSeekerWorkpreferences = jobSeekerWorkpreferences;
		this.jobSeekerContacts = jobSeekerContacts;
		this.jobSeekerExamScores = jobSeekerExamScores;
		this.jobSeekerAnnouncements = jobSeekerAnnouncements;
		this.jobSeekerExperiences = jobSeekerExperiences;
		this.qpStatusJobSeekerMappings = qpStatusJobSeekerMappings;
		this.jobSeekerSkillsets = jobSeekerSkillsets;
		this.jobSeekerPointsHistories = jobSeekerPointsHistories;
		this.jobSeekerCourses = jobSeekerCourses;
		this.jobSeekerPointses = jobSeekerPointses;
		this.jobSeekerStatuses = jobSeekerStatuses;
		this.jobSeekerReferralDetailses = jobSeekerReferralDetailses;
		this.jobSeekerSkillProjects = jobSeekerSkillProjects;
		this.jobSeekerLanguages = jobSeekerLanguages;
		this.jobseekerInterviews = jobseekerInterviews;
		this.jobSeekerDegrees = jobSeekerDegrees;
		this.jobSeekerBasicQps = jobSeekerBasicQps;
		this.jobSeekerPreferedJobroles = jobSeekerPreferedJobroles;
		this.jobSeekerExamSchedules = jobSeekerExamSchedules;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "job_seeker_reference_master_id", nullable = false)
	public JobSeekerReferenceMaster getJobSeekerReferenceMaster() {
		return this.jobSeekerReferenceMaster;
	}

	public void setJobSeekerReferenceMaster(
			JobSeekerReferenceMaster jobSeekerReferenceMaster) {
		this.jobSeekerReferenceMaster = jobSeekerReferenceMaster;
	}

	@Column(name = "user_id")
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_of_birth", length = 10)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@Column(name = "dob_verify")
	public Integer getDobVerify() {
		return this.dobVerify;
	}

	public void setDobVerify(Integer dobVerify) {
		this.dobVerify = dobVerify;
	}

	@Column(name = "gender", length = 6)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Column(name = "name_verify")
	public Integer getNameVerify() {
		return this.nameVerify;
	}

	public void setNameVerify(Integer nameVerify) {
		this.nameVerify = nameVerify;
	}

	@Column(name = "parent_name", length = 100)
	public String getParentName() {
		return this.parentName;
	}

	public void setParentName(String parentName) {
		this.parentName = parentName;
	}

	@Column(name = "pan")
	public String getPan() {
		return this.pan;
	}

	public void setPan(String pan) {
		this.pan = pan;
	}

	@Column(name = "pan_verify")
	public Integer getPanVerify() {
		return this.panVerify;
	}

	public void setPanVerify(Integer panVerify) {
		this.panVerify = panVerify;
	}

	@Column(name = "passport")
	public String getPassport() {
		return this.passport;
	}

	public void setPassport(String passport) {
		this.passport = passport;
	}

	@Column(name = "passport_verify")
	public Integer getPassportVerify() {
		return this.passportVerify;
	}

	public void setPassportVerify(Integer passportVerify) {
		this.passportVerify = passportVerify;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified_date", length = 19)
	public Date getModifiedDate() {
		return this.modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}

	@Column(name = "job_seeker_nick_name", length = 50)
	public String getJobSeekerNickName() {
		return this.jobSeekerNickName;
	}

	public void setJobSeekerNickName(String jobSeekerNickName) {
		this.jobSeekerNickName = jobSeekerNickName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerSchool> getJobSeekerSchools() {
		return this.jobSeekerSchools;
	}

	public void setJobSeekerSchools(Set<JobSeekerSchool> jobSeekerSchools) {
		this.jobSeekerSchools = jobSeekerSchools;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<PointsRedeemHistory> getPointsRedeemHistories() {
		return this.pointsRedeemHistories;
	}

	public void setPointsRedeemHistories(Set<PointsRedeemHistory> pointsRedeemHistories) {
		this.pointsRedeemHistories = pointsRedeemHistories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerWorkpreference>  getJobSeekerWorkpreferences() {
		return this.jobSeekerWorkpreferences;
	}

	public void setJobSeekerWorkpreferences(Set<JobSeekerWorkpreference>  jobSeekerWorkpreferences) {
		this.jobSeekerWorkpreferences = jobSeekerWorkpreferences;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "jobSeeker")
	public Set<JobSeekerContact> getJobSeekerContacts() {
		return this.jobSeekerContacts;
	}

	public void setJobSeekerContacts(Set<JobSeekerContact> jobSeekerContacts) {
		this.jobSeekerContacts = jobSeekerContacts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerExamScore> getJobSeekerExamScores() {
		return this.jobSeekerExamScores;
	}

	public void setJobSeekerExamScores(Set<JobSeekerExamScore> jobSeekerExamScores) {
		this.jobSeekerExamScores = jobSeekerExamScores;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerAnnouncement> getJobSeekerAnnouncements() {
		return this.jobSeekerAnnouncements;
	}

	public void setJobSeekerAnnouncements(Set<JobSeekerAnnouncement> jobSeekerAnnouncements) {
		this.jobSeekerAnnouncements = jobSeekerAnnouncements;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerExperience> getJobSeekerExperiences() {
		return this.jobSeekerExperiences;
	}

	public void setJobSeekerExperiences(Set<JobSeekerExperience> jobSeekerExperiences) {
		this.jobSeekerExperiences = jobSeekerExperiences;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<QpStatusJobSeekerMapping> getQpStatusJobSeekerMappings() {
		return this.qpStatusJobSeekerMappings;
	}

	public void setQpStatusJobSeekerMappings(Set<QpStatusJobSeekerMapping> qpStatusJobSeekerMappings) {
		this.qpStatusJobSeekerMappings = qpStatusJobSeekerMappings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerSkillset> getJobSeekerSkillsets() {
		return this.jobSeekerSkillsets;
	}

	public void setJobSeekerSkillsets(Set<JobSeekerSkillset> jobSeekerSkillsets) {
		this.jobSeekerSkillsets = jobSeekerSkillsets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerPointsHistory> getJobSeekerPointsHistories() {
		return this.jobSeekerPointsHistories;
	}

	public void setJobSeekerPointsHistories(Set<JobSeekerPointsHistory> jobSeekerPointsHistories) {
		this.jobSeekerPointsHistories = jobSeekerPointsHistories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerCourse> getJobSeekerCourses() {
		return this.jobSeekerCourses;
	}

	public void setJobSeekerCourses(Set<JobSeekerCourse> jobSeekerCourses) {
		this.jobSeekerCourses = jobSeekerCourses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerPoints> getJobSeekerPointses() {
		return this.jobSeekerPointses;
	}

	public void setJobSeekerPointses(Set<JobSeekerPoints> jobSeekerPointses) {
		this.jobSeekerPointses = jobSeekerPointses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerStatus> getJobSeekerStatuses() {
		return this.jobSeekerStatuses;
	}

	public void setJobSeekerStatuses(Set<JobSeekerStatus> jobSeekerStatuses) {
		this.jobSeekerStatuses = jobSeekerStatuses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerReferralDetails> getJobSeekerReferralDetailses() {
		return this.jobSeekerReferralDetailses;
	}

	public void setJobSeekerReferralDetailses(Set<JobSeekerReferralDetails> jobSeekerReferralDetailses) {
		this.jobSeekerReferralDetailses = jobSeekerReferralDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerSkillProject> getJobSeekerSkillProjects() {
		return this.jobSeekerSkillProjects;
	}

	public void setJobSeekerSkillProjects(Set<JobSeekerSkillProject> jobSeekerSkillProjects) {
		this.jobSeekerSkillProjects = jobSeekerSkillProjects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerLanguage> getJobSeekerLanguages() {
		return this.jobSeekerLanguages;
	}

	public void setJobSeekerLanguages(Set<JobSeekerLanguage> jobSeekerLanguages) {
		this.jobSeekerLanguages = jobSeekerLanguages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobseekerInterview> getJobseekerInterviews() {
		return this.jobseekerInterviews;
	}

	public void setJobseekerInterviews(Set<JobseekerInterview> jobseekerInterviews) {
		this.jobseekerInterviews = jobseekerInterviews;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerDegree> getJobSeekerDegrees() {
		return this.jobSeekerDegrees;
	}

	public void setJobSeekerDegrees(Set<JobSeekerDegree> jobSeekerDegrees) {
		this.jobSeekerDegrees = jobSeekerDegrees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerBasicQp> getJobSeekerBasicQps() {
		return this.jobSeekerBasicQps;
	}

	public void setJobSeekerBasicQps(Set<JobSeekerBasicQp> jobSeekerBasicQps) {
		this.jobSeekerBasicQps = jobSeekerBasicQps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerPreferedJobrole> getJobSeekerPreferedJobroles() {
		return this.jobSeekerPreferedJobroles;
	}

	public void setJobSeekerPreferedJobroles(Set<JobSeekerPreferedJobrole> jobSeekerPreferedJobroles) {
		this.jobSeekerPreferedJobroles = jobSeekerPreferedJobroles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobSeeker")
	public Set<JobSeekerExamSchedule> getJobSeekerExamSchedules() {
		return this.jobSeekerExamSchedules;
	}

	public void setJobSeekerExamSchedules(Set<JobSeekerExamSchedule> jobSeekerExamSchedules) {
		this.jobSeekerExamSchedules = jobSeekerExamSchedules;
	}


}
